namespace "Drone"

/* Assumptions */
assumption "Drone.BatteryStatus" min_period: 2 seconds
assumption "Drone.GPSLocation" min_period: 0.5 seconds

/* Default Values */
default "Drone.Startupchecks" off
default "Drone.GPSLocation" keep 



rule STATE_SPECIFIC "Rule 1" applies forall // a preplanned rule with the name "Rule 1" used for all drones
	trigger context["Drone.active"] ENTRY // it is triggered as soon as the state "active" is activated
    	monitor "Drone.GPSLocation":
    		period: every 3 seconds  // once every three seconds,
    		scope: local      //the GPS location should be locally monitored
    	monitor "Drone.Startupchecks":
    		period: every 4 seconds  // once every four seconds,
    		scope: central    //the results of the drone start-up checks should be  
           
rule STATE_SPECIFIC "In air checks"  applies forall
	trigger context["Drone.in-air"] ENTRY // when a drone enters the state "in-air"...
    	monitor "Drone.GPSLocation":
    		period: every 1 seconds  
    		scope:  central //... the GPS location should be centrally monitored once every  second
    		
rule GLOBAL "Battery_State_Warning" applies forall //The rule holds for all drones
	salience 1 	   //The rule has priority/salience 1. 
	           //If multiple ubiquitous rules can be applied, the one with the highest salience is selected
	trigger event['Drone.low-battery'] and event['Done.geofence-breach'] //When the event 'low-battery' and 'geofence-breach' occur.
		monitor "Drone.GPSLocation":
			scope:  local
			period: every 5 seconds //The GPS Location should be locally monitored once every 5 seconds.
		monitor "Drone.BatteryStatus":
			scope:  central
			period: every 2 seconds //The Battery Status should be centrally monitored once every 2 seconds seconds.
