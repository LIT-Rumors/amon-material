namespace "Drone";

/* Assumptions */
Assumption "Drone.BatteryStatus" MIN_PERIOD: 2 seconds;
Assumption "Drone.GPSLocation" MIN_PERIOD: 0.5 seconds;

/* Default Values */
Default "Drone.Startupchecks" off;
Default "Drone.GPSLocation" keep;

/* Preplanned Rules */
Rule PREPLANNED "Rule 1" applies forall // a preplanned rule with the name "Rule 1" used for all drones
	Trigger Context["Drone.active"] ENTRY // it is triggered as soon as the state "active" is activated
    	Monitor "Drone.GPSLocation":
    		CHANGE_PERIOD: every 3 seconds  // once every three seconds,
    		CHANGE_SCOPE: scope local      //the GPS location should be locally monitored
    	Monitor "Drone.Startupchecks":
    		CHANGE_PERIOD: every 4 seconds  // once every four seconds,
    		CHANGE_SCOPE: scope central    //the results of the drone start-up checks should be 
;    		                               //reported centrally to the ground control station
    		                              
Rule PREPLANNED "In air checks"  applies forall
	Trigger Context["Drone.in-air"] ENTRY // when a drone enters the state "in-air"...
    	Monitor "Drone.GPSLocation":
    		CHANGE_PERIOD: every 1 seconds  
    		CHANGE_SCOPE: scope central //... the GPS location should be centrally monitored once every  second
;   


/* Ubiquitous Rules */
Rule UBIQUITOUS "Battery_State_Warning" applies forall //The rule holds for all drones
	salience 1 	   //The rule has priority/salience 1. 
	           //If multiple ubiquitous rules can be applied, the one with the highest salience is selected
	Trigger Event['Drone.low-battery'] and Event['Done.geofence-breach'] //When the event 'low-battery' and 'geofence-breach' occur.
		Monitor "Drone.GPSLocation":
			CHANGE_SCOPE: scope local
			CHANGE_PERIOD: every 5 seconds //The GPS Location should be locally monitored once every 5 seconds.
		Monitor "Drone.BatteryStatus":
			CHANGE_SCOPE: scope central
			CHANGE_PERIOD: every 2 seconds //The Battery Status should be centrally monitored once every 2 seconds seconds.
; 		
			
			
			
			