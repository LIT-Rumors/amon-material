Assumption "Drone.Startupchecks" MIN_FREQUENCY:  1 seconds
Assumption "Drone.Location" MIN_FREQUENCY:  1 seconds
Assumption "Drone.Battery" MIN_FREQUENCY:  2 seconds
Assumption "Drone.Monitoring" MIN_FREQUENCY:  1 seconds
Assumption "Drone.Status" MIN_FREQUENCY:  1 seconds
Assumption "Drone.FlightSchedule" MIN_FREQUENCY:  1 seconds
//Assumption "Drone.Startupchecks" delay  5 seconds


Default "Drone.Startupchecks" off;
Default "Drone.Location" off;
Default "Drone.Battery" off;
Default "Drone.Monitoring" off;
Default "Drone.Status" off;
Default "Drone.FlightSchedule" off;

Default "Drone.Homelocation" off;
Default "Drone.Dronestate" off;
// Default "Drone.Dronecommand" off;
Default "GPS" off;

 Rule PREPLANNED "active"  applies forall
    Trigger Context["active"] ENTRY
		Monitor "Drone.Startupchecks":
				CHANGE_FREQUENCY: every 2 seconds
		 		CHANGE_SCOPE:scope central
		Monitor "Drone.Location":
				CHANGE_FREQUENCY: every 10 seconds
		 		CHANGE_SCOPE:scope central
		Monitor "Drone.Battery":
				CHANGE_FREQUENCY: every 10 seconds
		 		CHANGE_SCOPE:scope central
		Monitor "Drone.Status":
				CHANGE_FREQUENCY: every 10 seconds
		 		CHANGE_SCOPE:scope central
		Monitor "Drone.Monitoring":
			CHANGE_STATE: off
		Monitor "Drone.FlightSchedule":
			CHANGE_STATE: off;
		
Rule PREPLANNED "ready_for_takeoff"  applies forall
    Trigger Context["ready_for_takeoff"] ENTRY
			Monitor "Drone.Startupchecks":
				CHANGE_FREQUENCY: every 1 seconds
		 		CHANGE_SCOPE:scope central
			Monitor "Drone.Location":
					CHANGE_FREQUENCY: every 10 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.Battery":
					CHANGE_FREQUENCY: every 5 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.Status":
					CHANGE_FREQUENCY: every 1 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.Monitoring":
				CHANGE_FREQUENCY: every 10 seconds
	 			CHANGE_SCOPE:scope local
			Monitor "Drone.FlightSchedule":
				CHANGE_STATE: off;
    	
Rule PREPLANNED "taking_off"  applies forall
    Trigger Context["taking_off"] ENTRY
			Monitor "Drone.Startupchecks":
				CHANGE_STATE: off
			Monitor "Drone.Location":
					CHANGE_FREQUENCY: every 10 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.Battery":
					CHANGE_FREQUENCY: every 5 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.Status":
					CHANGE_FREQUENCY: every 5 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.Monitoring":
				CHANGE_FREQUENCY: every 10 seconds
	 			CHANGE_SCOPE:scope local
			Monitor "Drone.FlightSchedule":
				CHANGE_STATE: off;


Rule PREPLANNED "in_air"  applies forall
    Trigger Context["in_air"] ENTRY
			Monitor "Drone.Startupchecks":
				CHANGE_STATE: off
			Monitor "Drone.Location":
					CHANGE_FREQUENCY: every 5 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.Battery":
					CHANGE_FREQUENCY: every 5 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.Status":
					CHANGE_FREQUENCY: every 5 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.Monitoring":
				CHANGE_FREQUENCY: every 10 seconds
	 			CHANGE_SCOPE:scope local
			Monitor "Drone.FlightSchedule":
				CHANGE_FREQUENCY: every 5 seconds
	 			CHANGE_SCOPE:scope local;	



Rule PREPLANNED "rtl"  applies forall
    Trigger Context["rtl"] ENTRY
		Monitor "Drone.Startupchecks":
			CHANGE_STATE: off
			Monitor "Drone.Location":
					CHANGE_FREQUENCY: every 10 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.Battery":
					CHANGE_FREQUENCY: every 5 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.Status":
					CHANGE_FREQUENCY: every 5 seconds
			 		CHANGE_SCOPE:scope local
			Monitor "Drone.Monitoring":
				CHANGE_FREQUENCY: every 10 seconds
	 			CHANGE_SCOPE:scope local
		Monitor "Drone.FlightSchedule":
			CHANGE_STATE: off;
 		
 		
Rule PREPLANNED "flying_to_target"  applies forall
    Trigger Context["flying_to_target"] ENTRY
			Monitor "Drone.Startupchecks":
					CHANGE_STATE: off
			Monitor "Drone.Location":
					CHANGE_FREQUENCY: every 2 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.Battery":
					CHANGE_FREQUENCY: every 5 seconds
			 		CHANGE_SCOPE:scope local
			Monitor "Drone.Status":
					CHANGE_FREQUENCY: every 5 seconds
			 		CHANGE_SCOPE:scope local
			Monitor "Drone.Monitoring":
				CHANGE_FREQUENCY: every 5 seconds
	 			CHANGE_SCOPE:scope central
			Monitor "Drone.FlightSchedule":
				CHANGE_STATE: off;


Rule PREPLANNED "dropoff_location_reached"  applies forall
    Trigger Context["dropoff_location_reached"] ENTRY
				Monitor "Drone.Startupchecks":
					CHANGE_STATE: off
			Monitor "Drone.Location":
					CHANGE_FREQUENCY: every 2 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.Battery":
					CHANGE_FREQUENCY: every 5 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.Status":
					CHANGE_FREQUENCY: every 5 seconds
			 		CHANGE_SCOPE:scope local
			Monitor "Drone.Monitoring":
				CHANGE_FREQUENCY: every 2 seconds
	 			CHANGE_SCOPE:scope central
			Monitor "Drone.FlightSchedule":
				CHANGE_STATE: off;


Rule PREPLANNED "dropping_item"  applies forall
    Trigger Context["dropping_item"] ENTRY
			Monitor "Drone.Startupchecks":
				CHANGE_STATE: off
			Monitor "Drone.Location":
					CHANGE_FREQUENCY: every 2 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.Battery":
					CHANGE_FREQUENCY: every 5 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.Status":
					CHANGE_FREQUENCY: every 2 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.Monitoring":
				CHANGE_FREQUENCY: every 2 seconds
	 			CHANGE_SCOPE:scope central
			Monitor "Drone.FlightSchedule":
			CHANGE_STATE: off;

    	
 Rule UBIQUITOUS "battery" applies forall  
 	salience 22
 	Trigger Event['Low Battery']
 		Monitor "Drone.Startupchecks":
				CHANGE_STATE: off
			Monitor "Drone.Location":
					CHANGE_FREQUENCY: every 10 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.Battery":
					CHANGE_FREQUENCY: every 10 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.Status":
					CHANGE_STATE: off
			Monitor "Drone.Monitoring":
				CHANGE_FREQUENCY: every 5 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.FlightSchedule":
			CHANGE_STATE: off;

    	
 Rule UBIQUITOUS "battery_and_proximity" applies forall 
 	Trigger Event['Proximity'] and Event['Low Battery']
 		Monitor "Drone.Startupchecks":
				CHANGE_STATE: off
			Monitor "Drone.Location":
					CHANGE_FREQUENCY: every 2 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.Battery":
					CHANGE_FREQUENCY: every 10 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.Status":
					CHANGE_STATE: off
			Monitor "Drone.Monitoring":
			 		CHANGE_FREQUENCY: every 5 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.FlightSchedule":
			CHANGE_STATE: off;
    	

 Rule UBIQUITOUS "no_fly_zome" applies forall 
 	Trigger Event['geofence breach']
 		Monitor "Drone.Startupchecks":
				CHANGE_STATE: off
			Monitor "Drone.Location":
					CHANGE_FREQUENCY: every 1 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.Battery":
					CHANGE_FREQUENCY: every 10 seconds
			 		CHANGE_SCOPE:scope local
			Monitor "Drone.Status":
					CHANGE_STATE: off
			Monitor "Drone.Monitoring":
			 		CHANGE_FREQUENCY: every 2 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.FlightSchedule":
			CHANGE_STATE: off; 
   
   Rule UBIQUITOUS "mechanic_failure" applies forall 
 	Trigger Event['mechanic failure']
 		Monitor "Drone.Startupchecks":
				CHANGE_STATE: off
			Monitor "Drone.Location":
					CHANGE_FREQUENCY: every 1 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.Battery":
					CHANGE_FREQUENCY: every 2 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.Status":
					CHANGE_STATE: off
			Monitor "Drone.Monitoring":
			 		CHANGE_FREQUENCY: every 1 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.FlightSchedule":
			CHANGE_STATE: off;	

  Rule UBIQUITOUS "weather_conditions" applies forall 
 	Trigger Event['adverse weather']
 		Monitor "Drone.Startupchecks":
				CHANGE_STATE: off
			Monitor "Drone.Location":
					CHANGE_FREQUENCY: every 1 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.Battery":
					CHANGE_FREQUENCY: every 5 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.Status":
					CHANGE_STATE: off
			Monitor "Drone.Monitoring":
			 		CHANGE_FREQUENCY: every 1 seconds
			 		CHANGE_SCOPE:scope central
			Monitor "Drone.FlightSchedule":
			CHANGE_STATE: off;	
    	 